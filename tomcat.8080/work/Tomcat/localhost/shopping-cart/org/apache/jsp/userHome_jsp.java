/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.87
 * Generated at: 2025-09-15 13:44:41 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.shashi.service.impl.*;
import com.shashi.service.*;
import com.shashi.beans.*;
import java.util.*;
import javax.servlet.ServletOutputStream;
import java.io.*;

public final class userHome_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/footer.html", Long.valueOf(1757943759218L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(8);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("com.shashi.beans");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("com.shashi.service.impl");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_packages.add("com.shashi.service");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(1);
    _jspx_imports_classes.add("javax.servlet.ServletOutputStream");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>Ellison Electronics</title>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/changes.css\">\r\n");
      out.write("<script\r\n");
      out.write("	src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\r\n");
      out.write("<script\r\n");
      out.write("	src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body style=\"background-color: #E6F9E6;\">\r\n");
      out.write("\r\n");
      out.write("	");

	/* Checking the user credentials */
	String userName = (String) session.getAttribute("username");
	String password = (String) session.getAttribute("password");

	if (userName == null || password == null) {
		response.sendRedirect("login.jsp?message=Session Expired, Login Again!!");
	}

	ProductServiceImpl prodDao = new ProductServiceImpl();
	List<ProductBean> products = new ArrayList<ProductBean>();

	// UPDATED: Added price filter support
	String search = request.getParameter("search");
	String type = request.getParameter("type");
	String priceFilter = request.getParameter("priceFilter");
	String message = "All Products";

	if (search != null) {
		products = prodDao.searchAllProducts(search);
		message = "Showing Results for '" + search + "'";
	} else if (type != null) {
		products = prodDao.getAllProductsByType(type);
		message = "Showing Results for '" + type + "'";
	} else if (priceFilter != null) {
		// Price filtering logic
		products = prodDao.getAllProducts();
		List<ProductBean> filteredProducts = new ArrayList<ProductBean>();

		if (priceFilter.equals("0-10000")) {
			for (ProductBean p : products) {
		if (p.getProdPrice() <= 10000) {
			filteredProducts.add(p);
		}
			}
			message = "Products Under Rs 10,000";
		} else if (priceFilter.equals("10000-30000")) {
			for (ProductBean p : products) {
		if (p.getProdPrice() > 10000 && p.getProdPrice() <= 30000) {
			filteredProducts.add(p);
		}
			}
			message = "Products Rs 10,000 - Rs 30,000";
		} else if (priceFilter.equals("30000-50000")) {
			for (ProductBean p : products) {
		if (p.getProdPrice() > 30000 && p.getProdPrice() <= 50000) {
			filteredProducts.add(p);
		}
			}
			message = "Products Rs 30,000 - Rs 50,000";
		} else if (priceFilter.equals("50000-100000")) {
			for (ProductBean p : products) {
		if (p.getProdPrice() > 50000 && p.getProdPrice() <= 100000) {
			filteredProducts.add(p);
		}
			}
			message = "Products Rs 50,000 - Rs 1,00,000";
		} else if (priceFilter.equals("100000-200000")) {
			for (ProductBean p : products) {
		if (p.getProdPrice() > 100000 && p.getProdPrice() <= 200000) {
			filteredProducts.add(p);
		}
			}
			message = "Products Rs 1,00,000 - Rs 2,00,000";
		}
		products = filteredProducts;
	} else {
		products = prodDao.getAllProducts();
	}

	if (products.isEmpty()) {
		message = "No items found for the search '"
		+ (search != null ? search : type != null ? type : "selected price range") + "'";
		products = prodDao.getAllProducts();
	}
	
      out.write("\r\n");
      out.write("\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "header.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<!-- ADDED: Compact Filter Bar -->\r\n");
      out.write("	<div class=\"container-fluid\"\r\n");
      out.write("		style=\"background-color: white; border-bottom: 1px solid #ddd; padding: 10px 0; margin-bottom: 15px;\">\r\n");
      out.write("		<div class=\"container\">\r\n");
      out.write("			<div class=\"row\">\r\n");
      out.write("				<div class=\"col-md-12\">\r\n");
      out.write("					<!-- Filter Dropdown Button -->\r\n");
      out.write("					<div class=\"btn-group\" style=\"margin-right: 15px;\">\r\n");
      out.write("						<button type=\"button\"\r\n");
      out.write("							class=\"btn btn-default btn-sm dropdown-toggle\"\r\n");
      out.write("							data-toggle=\"dropdown\"\r\n");
      out.write("							style=\"border: 1px solid #33cc33; color: #33cc33;\">\r\n");
      out.write("							<i class=\"glyphicon glyphicon-filter\"></i> Price\r\n");
      out.write("							");

							if (priceFilter != null) {
							
      out.write("\r\n");
      out.write("							<span class=\"filter-badge\">1</span>\r\n");
      out.write("							");

							}
							
      out.write("\r\n");
      out.write("							<span class=\"caret\"></span>\r\n");
      out.write("						</button>\r\n");
      out.write("						<ul class=\"dropdown-menu price-filter-menu\">\r\n");
      out.write("							<li class=\"dropdown-header\">Select Price Range</li>\r\n");
      out.write("							<li><a href=\"userHome.jsp\">All Products</a></li>\r\n");
      out.write("							<li class=\"divider\"></li>\r\n");
      out.write("							<li><a href=\"userHome.jsp?priceFilter=0-10000\">Under Rs\r\n");
      out.write("									10,000</a></li>\r\n");
      out.write("							<li><a href=\"userHome.jsp?priceFilter=10000-30000\">Rs\r\n");
      out.write("									10,000 - Rs 30,000</a></li>\r\n");
      out.write("							<li><a href=\"userHome.jsp?priceFilter=30000-50000\">Rs\r\n");
      out.write("									30,000 - Rs 50,000</a></li>\r\n");
      out.write("							<li><a href=\"userHome.jsp?priceFilter=50000-100000\">Rs\r\n");
      out.write("									50,000 - Rs 1,00,000</a></li>\r\n");
      out.write("							<li><a href=\"userHome.jsp?priceFilter=100000-200000\">Rs\r\n");
      out.write("									1,00,000 - Rs 2,00,000</a></li>\r\n");
      out.write("						</ul>\r\n");
      out.write("					</div>\r\n");
      out.write("\r\n");
      out.write("					<!-- Active Filter Display -->\r\n");
      out.write("					");

					if (priceFilter != null) {
					
      out.write("\r\n");
      out.write("					<div class=\"active-filters\"\r\n");
      out.write("						style=\"display: inline-block; margin-right: 15px;\">\r\n");
      out.write("						<span class=\"active-filter-tag\"> ");

 String filterText = "";
 if (priceFilter.equals("0-10000"))
 	filterText = "Under Rs 10,000";
 else if (priceFilter.equals("10000-30000"))
 	filterText = "Rs 10,000 - Rs 30,000";
 else if (priceFilter.equals("30000-50000"))
 	filterText = "Rs 30,000 - Rs 50,000";
 else if (priceFilter.equals("50000-100000"))
 	filterText = "Rs 50,000 - Rs 1,00,000";
 else if (priceFilter.equals("100000-200000"))
 	filterText = "Rs 1,00,000 - Rs 2,00,000";
 
      out.write(' ');
      out.print(filterText);
      out.write(" <a href=\"userHome.jsp\" class=\"remove-filter\">×</a>\r\n");
      out.write("						</span>\r\n");
      out.write("					</div>\r\n");
      out.write("					");

					}
					
      out.write("\r\n");
      out.write("\r\n");
      out.write("					<!-- Results Count -->\r\n");
      out.write("					<div class=\"results-count pull-right\"\r\n");
      out.write("						style=\"padding: 6px 0; color: #666; font-size: 13px;\">\r\n");
      out.write("						<strong>");
      out.print(products.size());
      out.write("</strong> products found\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("	<!-- UPDATED: Product Display Message -->\r\n");
      out.write("	<div class=\"text-center\"\r\n");
      out.write("		style=\"color: black; font-size: 16px; font-weight: bold; margin-bottom: 20px;\">\r\n");
      out.write("		");
      out.print(message);
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("	<!-- Start of Product Items List -->\r\n");
      out.write("	<div class=\"container\">\r\n");
      out.write("		<div class=\"row text-center\">\r\n");
      out.write("\r\n");
      out.write("			");

			for (ProductBean product : products) {
				int cartQty = new CartServiceImpl().getCartItemCount(userName, product.getProdId());
			
      out.write("\r\n");
      out.write("			<div class=\"col-sm-4\" style='height: 450px;'>\r\n");
      out.write("				<!-- Increased height for wishlist button -->\r\n");
      out.write("				<div class=\"thumbnail\">\r\n");
      out.write("					<img src=\"./ShowImage?pid=");
      out.print(product.getProdId());
      out.write("\" alt=\"Product\"\r\n");
      out.write("						style=\"height: 150px; max-width: 180px\">\r\n");
      out.write("					<p class=\"productname\">");
      out.print(product.getProdName());
      out.write("\r\n");
      out.write("					</p>\r\n");
      out.write("					");

					String description = product.getProdInfo();
					description = description.substring(0, Math.min(description.length(), 100));
					
      out.write("\r\n");
      out.write("					<p class=\"productinfo\">");
      out.print(description);
      out.write("..\r\n");
      out.write("					</p>\r\n");
      out.write("					<p class=\"price\">\r\n");
      out.write("						Rs\r\n");
      out.write("						");
      out.print(product.getProdPrice());
      out.write("\r\n");
      out.write("					</p>\r\n");
      out.write("\r\n");
      out.write("					");

					// Check if product is in wishlist
					WishlistServiceImpl wishlistService = new WishlistServiceImpl();
					boolean isInWishlist = false;
					try {
						isInWishlist = wishlistService.isInWishlist(userName, product.getProdId());
					} catch (Exception e) {
						// If wishlist service is not available yet, default to false
						isInWishlist = false;
					}
					
      out.write("\r\n");
      out.write("\r\n");
      out.write("					<form method=\"post\">\r\n");
      out.write("						");

						if (cartQty == 0) {
						
      out.write("\r\n");
      out.write("						<button type=\"submit\"\r\n");
      out.write("							formaction=\"./AddtoCart?uid=");
      out.print(userName);
      out.write("&pid=");
      out.print(product.getProdId());
      out.write("&pqty=1\"\r\n");
      out.write("							class=\"btn btn-success\">Add to Cart</button>\r\n");
      out.write("						&nbsp;&nbsp;&nbsp;\r\n");
      out.write("						<button type=\"submit\"\r\n");
      out.write("							formaction=\"./AddtoCart?uid=");
      out.print(userName);
      out.write("&pid=");
      out.print(product.getProdId());
      out.write("&pqty=1\"\r\n");
      out.write("							class=\"btn btn-primary\">Buy Now</button>\r\n");
      out.write("						");

						} else {
						
      out.write("\r\n");
      out.write("						<button type=\"submit\"\r\n");
      out.write("							formaction=\"./AddtoCart?uid=");
      out.print(userName);
      out.write("&pid=");
      out.print(product.getProdId());
      out.write("&pqty=0\"\r\n");
      out.write("							class=\"btn btn-danger\">Remove From Cart</button>\r\n");
      out.write("						&nbsp;&nbsp;&nbsp;\r\n");
      out.write("						<button type=\"submit\" formaction=\"cartDetails.jsp\"\r\n");
      out.write("							class=\"btn btn-success\">Checkout</button>\r\n");
      out.write("						");

						}
						
      out.write("\r\n");
      out.write("						<br>\r\n");
      out.write("						<br>\r\n");
      out.write("						<!-- Wishlist Button -->\r\n");
      out.write("						");

						if (isInWishlist) {
						
      out.write("\r\n");
      out.write("						<button type=\"submit\"\r\n");
      out.write("							formaction=\"./WishlistSrv?action=remove&pid=");
      out.print(product.getProdId());
      out.write("\"\r\n");
      out.write("							class=\"btn btn-warning btn-sm\">\r\n");
      out.write("							<span class=\"glyphicon glyphicon-heart\"></span> Remove from\r\n");
      out.write("							Wishlist\r\n");
      out.write("						</button>\r\n");
      out.write("						");

						} else {
						
      out.write("\r\n");
      out.write("						<button type=\"submit\"\r\n");
      out.write("							formaction=\"./WishlistSrv?action=add&pid=");
      out.print(product.getProdId());
      out.write("\"\r\n");
      out.write("							class=\"btn btn-info btn-sm\">\r\n");
      out.write("							<span class=\"glyphicon glyphicon-heart-empty\"></span> Add to\r\n");
      out.write("							Wishlist\r\n");
      out.write("						</button>\r\n");
      out.write("						");

						}
						
      out.write("\r\n");
      out.write("					</form>\r\n");
      out.write("					<br />\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			");

			}
			
      out.write("\r\n");
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	<!-- End of Product Items List -->\r\n");
      out.write("\r\n");
      out.write("	");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>Shoping Center</title>\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css\">\r\n");
      out.write("<script\r\n");
      out.write("	src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\r\n");
      out.write("<script\r\n");
      out.write("	src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/changes.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body style=\"background-color: #E6F9E6;\">\r\n");
      out.write("	<!-- Start the footer Contacts -->\r\n");
      out.write("	<!-- <a name=\"contact\"></a> -->\r\n");
      out.write("	<div class=\"container-fluid\"\r\n");
      out.write("		style=\"background-color: #454545; color: white; margin-top: 200px;\">\r\n");
      out.write("		<div class=\"container\">\r\n");
      out.write("			<h3 class=\"text-center\">Contact</h3>\r\n");
      out.write("			<p class=\"text-center\">\r\n");
      out.write("				<em>We love our fans!</em>\r\n");
      out.write("			</p>\r\n");
      out.write("			<div class=\"row test\">\r\n");
      out.write("				<div class=\"col-md-4\">\r\n");
      out.write("					<p>Fan? Drop a note.</p>\r\n");
      out.write("					<p>\r\n");
      out.write("						<span class=\"glyphicon glyphicon-map-marker\"></span>Bitter Code\r\n");
      out.write("					</p>\r\n");
      out.write("					<p>\r\n");
      out.write("						<span class=\"glyphicon glyphicon-phone\"></span>Phone: +91\r\n");
      out.write("						1515151515\r\n");
      out.write("					</p>\r\n");
      out.write("					<p>\r\n");
      out.write("						<span class=\"glyphicon glyphicon-envelope\"></span>Email:\r\n");
      out.write("						thebittercode@gmail.com\r\n");
      out.write("					</p>\r\n");
      out.write("					<p>\r\n");
      out.write("						<span class=\"glyphicon glyphicon-copyright-mark\"></span>\r\n");
      out.write("						BitterCode - 2023\r\n");
      out.write("					</p>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"col-md-8\">\r\n");
      out.write("					<form action=\"fansMessage\" method=\"post\">\r\n");
      out.write("						<div class=\"row\">\r\n");
      out.write("							<div class=\"col-sm-6 form-group\">\r\n");
      out.write("								<input class=\"form-control\" id=\"name\" name=\"name\"\r\n");
      out.write("									placeholder=\"Name\" type=\"text\" required>\r\n");
      out.write("							</div>\r\n");
      out.write("							<div class=\"col-sm-6 form-group\">\r\n");
      out.write("								<input class=\"form-control\" id=\"email\" name=\"email\"\r\n");
      out.write("									placeholder=\"Email\" type=\"email\" required>\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("						<textarea class=\"form-control\" id=\"comments\" name=\"comments\"\r\n");
      out.write("							placeholder=\"Comment\" rows=\"5\" required></textarea>\r\n");
      out.write("						<div class=\"row\">\r\n");
      out.write("							<div class=\"col-md-12 form-group\">\r\n");
      out.write("								<button class=\"btn pull-right\" type=\"submit\">Send</button>\r\n");
      out.write("							</div>\r\n");
      out.write("						</div>\r\n");
      out.write("					</form>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	<!-- End of Contact or about us -->\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
